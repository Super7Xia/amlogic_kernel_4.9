# 1 "arch/arm64/boot/dts/amlogic/gxl_p212_2g.dts"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "arch/arm64/boot/dts/amlogic/gxl_p212_2g.dts"
# 18 "arch/arm64/boot/dts/amlogic/gxl_p212_2g.dts"
/dts-v1/;

# 1 "./arch/arm64/boot/dts/include/dt-bindings/interrupt-controller/arm-gic.h" 1







# 1 "./arch/arm64/boot/dts/include/dt-bindings/interrupt-controller/irq.h" 1
# 9 "./arch/arm64/boot/dts/include/dt-bindings/interrupt-controller/arm-gic.h" 2
# 21 "arch/arm64/boot/dts/amlogic/gxl_p212_2g.dts" 2
# 1 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 1
# 19 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi"
# 1 "./arch/arm64/boot/dts/include/dt-bindings/reset/amlogic,gxl-reset.h" 1
# 20 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
# 1 "./arch/arm64/boot/dts/include/dt-bindings/clock/amlogic,gxl-clkc.h" 1
# 21 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
# 1 "./arch/arm64/boot/dts/include/dt-bindings/gpio/gxl.h" 1
# 22 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
# 1 "./arch/arm64/boot/dts/include/dt-bindings/gpio/gpio.h" 1
# 23 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
# 1 "./arch/arm64/boot/dts/include/dt-bindings/pwm/meson.h" 1
# 24 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
# 1 "./arch/arm64/boot/dts/include/dt-bindings/input/input.h" 1
# 12 "./arch/arm64/boot/dts/include/dt-bindings/input/input.h"
# 1 "./arch/arm64/boot/dts/include/dt-bindings/input/linux-event-codes.h" 1
# 13 "./arch/arm64/boot/dts/include/dt-bindings/input/input.h" 2
# 25 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
# 1 "./arch/arm64/boot/dts/include/dt-bindings/input/meson_rc.h" 1
# 26 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
# 1 "./arch/arm64/boot/dts/include/dt-bindings/pwm/pwm.h" 1
# 27 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2

# 1 "arch/arm64/boot/dts/amlogic/mesongxbb-gpu-mali450.dtsi" 1
# 10 "arch/arm64/boot/dts/amlogic/mesongxbb-gpu-mali450.dtsi"
/ {
 gpu:mali@d00c0000{
  #cooling-cells = <2>;
  compatible = "arm,mali-450";
  interrupt-parent = <&gic>;
  reg = <0 0xd00c0000 0 0x40000>,
        <0 0xc883c000 0 0x01000>,
        <0 0xc8100000 0 0x01000>,
        <0 0xc883c000 0 0x01000>,
        <0 0xc1104440 0 0x01000>;
  interrupts = <0 160 4>, <0 161 4>, <0 162 4>, <0 163 4>,
       <0 164 4>, <0 165 4>, <0 166 4>, <0 167 4>,
       <0 168 4>, <0 169 4>;
  interrupt-names = "IRQGP", "IRQGPMMU", "IRQPP", "IRQPMU",
   "IRQPP0", "IRQPPMMU0", "IRQPP1", "IRQPPMMU1",
   "IRQPP2", "IRQPPMMU2";
  pmu_domain_config = <0x1 0x2 0x4 0x4 0x0 0x0
         0x0 0x0 0x0 0x1 0x2 0x0>;
  pmu_switch_delay = <0xffff> ;
  num_of_pp = <3> ;
  def_clk = <2> ;
  sc_mpp = <3>;
  tbl = <&clk125_cfg
   &clk285_cfg
   &clk400_cfg
   &clk500_cfg
   &clk666_cfg
   &clk800_cfg>;

  clocks = <&clkc (((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 8)>;
  clock-names = "gpu_mux";


    control_interval = <200>;

    clk125_cfg:clk125_cfg {
   clk_freq = <125000000>;
   clk_parent = "fclk_div4";
   clkp_freq = <500000000>;
   voltage = <1150>;
   keep_count = <5>;
   threshold = <30 250>;
    };

    clk250_cfg:clk250_cfg {
   clk_freq = <250000000>;
   clk_parent = "fclk_div4";
   clkp_freq = <500000000>;
   voltage = <1150>;
   keep_count = <5>;
   threshold = <115 250>;

    };

    clk285_cfg:clk285_cfg {
   clk_freq = <285000000>;
   clk_parent = "fclk_div7";
   clkp_freq = <285000000>;
   voltage = <1150>;
   keep_count = <5>;
   threshold = <100 250>;

    };

    clk400_cfg:clk400_cfg {
   clk_freq = <400000000>;
   clk_parent = "fclk_div5";
   clkp_freq = <400000000>;
   voltage = <1150>;
   keep_count = <3>;
   threshold = <168 250>;

    };

    clk500_cfg:clk500_cfg {
   clk_freq = <500000000>;
   clk_parent = "fclk_div4";
   clkp_freq = <500000000>;
   voltage = <1150>;
   keep_count = <2>;
   threshold = <190 250>;

    };

    clk666_cfg:clk666_cfg {
   clk_freq = <666000000>;
   clk_parent = "fclk_div3";
   clkp_freq = <666000000>;
   voltage = <1150>;
   keep_count = <1>;
   threshold = <177 250>;

    };

    clk750_cfg:clk750_cfg {
   clk_freq = <744000000>;
   clk_parent = "gp0_pll";
   clkp_freq = <744000000>;
   voltage = <1150>;
   keep_count = <1>;
   threshold = <213 255>;

    };

    clk800_cfg:clk800_cfg {
   clk_freq = <792000000>;
   clk_parent = "gp0_pll";
   clkp_freq = <792000000>;
   voltage = <1150>;
   keep_count = <1>;
   threshold = <230 255>;
    };

 };
};
# 29 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi" 2
/ {
 cpus:cpus {
  #address-cells = <2>;
  #size-cells = <0>;

  cpu-map {
   cluster0:cluster0 {
    core0 {
     cpu = <&CPU0>;
    };
    core1 {
     cpu = <&CPU1>;
    };
    core2 {
     cpu = <&CPU2>;
    };
    core3 {
     cpu = <&CPU3>;
    };
   };
  };
  CPU0:cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-a53","arm,armv8";
   reg = <0x0 0x0>;
   enable-method = "psci";
   clocks = <&scpi_dvfs 0>;
   clock-names = "cpu-cluster.0";
   cpu-idle-states = <&SYSTEM_SLEEP_0>;

  };

  CPU1:cpu@1 {
   device_type = "cpu";
   compatible = "arm,cortex-a53","arm,armv8";
   reg = <0x0 0x1>;
   enable-method = "psci";
   clocks = <&scpi_dvfs 0>;
   clock-names = "cpu-cluster.0";
   cpu-idle-states = <&SYSTEM_SLEEP_0>;

  };
  CPU2:cpu@2 {
   device_type = "cpu";
   compatible = "arm,cortex-a53","arm,armv8";
   reg = <0x0 0x2>;
   enable-method = "psci";
   clocks = <&scpi_dvfs 0>;
   clock-names = "cpu-cluster.0";
   cpu-idle-states = <&SYSTEM_SLEEP_0>;

  };

  CPU3:cpu@3 {
   device_type = "cpu";
   compatible = "arm,cortex-a53","arm,armv8";
   reg = <0x0 0x3>;
   enable-method = "psci";
   clocks = <&scpi_dvfs 0>;
   clock-names = "cpu-cluster.0";
   cpu-idle-states = <&SYSTEM_SLEEP_0>;

  };


  idle-states {
   entry-method = "arm,psci";
# 106 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi"
   SYSTEM_SLEEP_0: system-sleep-0 {
    compatible = "arm,idle-state";
    arm,psci-suspend-param = <0x0010000>;
    local-timer-stop;
    entry-latency-us = <0x3fffffff>;
    exit-latency-us = <0x40000000>;
    min-residency-us = <0xffffffff>;
   };
  };
 };

 timer {
  compatible = "arm,armv8-timer";
  interrupts = <1 13 0xff01>,
    <1 14 0xff01>,
    <1 11 0xff01>,
    <1 10 0xff01>;
 };
 timer_bc {
  compatible = "arm, meson-bc-timer";
  reg= <0x0 0xc1109990 0x0 0x4 0x0 0xc1109994 0x0 0x4>;
  timer_name = "Meson TimerF";
  clockevent-rating=<300>;
  clockevent-shift=<20>;
  clockevent-features=<0x23>;
  interrupts = <0 60 1>;
  bit_enable=<16>;
  bit_mode=<12>;
  bit_resolution=<0>;
 };
 arm_pmu {
  compatible = "arm,armv8-pmuv3";
  interrupts = <0 137 4>,
        <0 138 4>,
        <0 153 4>,
        <0 154 4>;
 };

 gic: interrupt-controller@2c001000 {
  compatible = "arm,cortex-a15-gic", "arm,cortex-a9-gic";
  #interrupt-cells = <3>;
  #address-cells = <0>;
  interrupt-controller;
  reg = <0x0 0xc4301000 0 0x1000>,
        <0x0 0xc4302000 0 0x0100>;
  interrupts = <1 9 0xf04>;
 };

 psci {
  compatible = "arm,psci-0.2";
  method = "smc";
 };

 meson_suspend:pm{
  compatible = "amlogic, pm";
  device_name = "aml_pm";
  reg = <0x0 0xc810023c 0x0 0x4>;
 };

 secmon {
  compatible = "amlogic, secmon";
  memory-region = <&secmon_reserved>;
  in_base_func = <0x82000020>;
  out_base_func = <0x82000021>;
  reserve_mem_size = <0x00300000>;
 };

 securitykey {
  compatible = "aml, securitykey";
  storage_query = <0x82000060>;
  storage_read = <0x82000061>;
  storage_write = <0x82000062>;
  storage_tell = <0x82000063>;
  storage_verify = <0x82000064>;
  storage_status = <0x82000065>;
  storage_list = <0x82000067>;
  storage_remove = <0x82000068>;
  storage_in_func = <0x82000023>;
  storage_out_func = <0x82000024>;
  storage_block_func = <0x82000025>;
  storage_size_func = <0x82000027>;
  storage_set_enctype = <0x8200006A>;
  storage_get_enctype = <0x8200006B>;
  storage_version = <0x8200006C>;
 };

 cpu_iomap{
  compatible = "amlogic, iomap";
  #address-cells=<2>;
  #size-cells=<2>;
  ranges;
  io_cbus_base{
   reg = <0x0 0xc1100000 0x0 0x100000>;
  };
  io_apb_base{
   reg = <0x0 0xd0000000 0x0 0x200000>;
  };
  io_aobus_base{
   reg = <0x0 0xc8100000 0x0 0x100000>;
  };
 };

 cpu_info{
  compatible = "amlogic, cpuinfo";
  cpuinfo_cmd = <0x82000044>;
  status = "okay";
 };

 watchdog {
  compatible = "amlogic, meson-wdt";
  status = "disabled";
  default_timeout=<10>;
  reset_watchdog_method=<1>;
  reset_watchdog_time=<2>;
  shutdown_timeout=<10>;
  firmware_timeout=<6>;
  suspend_timeout=<6>;
  reg = <0x0 0xc11098d0 0x0 0x10>;
  clock-names = "xtal";
  clocks = <&xtal>;
 };

 jtag {
  compatible = "amlogic, jtag";
  status = "okay";
  select = "apao";
  jtagao-gpios = <&gpio 22 0
    &gpio 23 0
    &gpio 24 0
    &gpio 25 0>;
  jtagee-gpios = <&gpio 42 0
    &gpio 43 0
    &gpio 44 0
    &gpio 45 0>;
 };

 mailbox: mhu@c883c400 {
  compatible = "amlogic, meson_mhu";
  reg = <0x0 0xc883c400 0x0 0x4c>,
        <0x0 0xc8013000 0x0 0x800>;
  interrupts = <0 209 1>,
        <0 210 1>;
  #mbox-cells = <1>;
  mbox-names = "cpu_to_scp_low", "cpu_to_scp_high";
  mboxes = <&mailbox 0 &mailbox 1>;
 };

 scpi_clocks {
  compatible = "arm, scpi-clks";

  scpi_dvfs: scpi_clocks@0 {
   compatible = "arm, scpi-clk-indexed";
   #clock-cells = <1>;
   clock-indices = <0>;
   clock-output-names = "vcpu";
  };

 };

 xtal: xtal-clk {
  compatible = "fixed-clock";
  clock-frequency = <24000000>;
  clock-output-names = "xtal";
  #clock-cells = <0>;
 };

 vpu {
  compatible = "amlogic, vpu";
  dev_name = "vpu";
  status = "ok";
  clocks = <&clkc ((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 35)
   &clkc ((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 44)
   &clkc (((25 + 25) + 26) + 13)>;
  clock-names = "vpu_clk",
   "vapb_clk",
   "vpu_intr";
  clk_level = <7>;


 };

 spicc:@c1108d80{
  compatible = "amlogic, spicc";
  status = "disabled";
  reg = <0x0 0xc1108d80 0x0 0x28>;
  clocks = <&clkc (25 + 5)>;
  clock-names = "spicc_clk";
  interrupts = <0 81 1>;
  device_id = <0>;
 };

 uart_AO: serial@c81004c0 {
  compatible = "amlogic, meson-uart";
  reg = <0x0 0xc81004c0 0x0 0x18>;
  interrupts = <0 193 1>;
  status = "okay";
  clocks = <&xtal>;
  clock-names = "clk_uart";
  xtal_tick_en = <1>;
  fifosize = < 64 >;
  pinctrl-names = "default";
  pinctrl-0 = <&ao_uart_pins>;
  support-sysrq = <0>;
 };

 uart_A: serial@c11084c0 {
  compatible = "amlogic, meson-uart";
  reg = <0x0 0xc11084c0 0x0 0x18>;
  interrupts = <0 26 1>;
  status = "okay";
  clocks = <&clkc (25 + 10)>;
  clock-names = "clk_uart";
  fifosize = < 128 >;
  pinctrl-names = "default";
  pinctrl-0 = <&a_uart_pins>;
 };

 uart_B: serial@c11084dc {
  compatible = "amlogic, meson-uart";
  reg = <0x0 0xc11084dc 0x0 0x18>;
  interrupts = <0 75 1>;
  status = "disabled";
  clocks = <&clkc ((25 + 25) + 14)>;
  clock-names = "clk_uart";
  fifosize = < 64 >;
  pinctrl-names = "default";
  pinctrl-0 = <&b_uart_pins>;
 };

 uart_C: serial@c1108700 {
  compatible = "amlogic, meson-uart";
  reg = <0x0 0xc1108700 0x0 0x18>;
  interrupts = <0 93 1>;
  status = "disabled";
  clocks = <&clkc (((25 + 25) + 26) + 11)>;
  clock-names = "clk_uart";
  fifosize = < 64 >;
  pinctrl-names = "default";
  pinctrl-0 = <&c_uart_pins>;
 };

 uart_AO_B: serial@c81004e0 {
  compatible = "amlogic, meson-uart";
  reg = <0x0 0xc81004e0 0x0 0x18>;
  interrupts = <0 197 1>;
  status = "disable";
  clocks = <&xtal>;
  clock-names = "clk_uart";
  fifosize = < 64 >;
  pinctrl-names = "default";
  pinctrl-0 = <&ao_b_uart_pins>;
 };

i2c_ao: i2c@c8100500{
  compatible = "amlogic, meson-i2c";
  dev_name = "i2c-AO";
  status = "disabled";
  reg = <0x0 0xc8100500 0x0 0x1d>;
  device_id = <0>;
  pinctrl-names="default";
  pinctrl-0=<&ao_i2c_master>;
  #address-cells = <1>;
  #size-cells = <0>;
  use_pio = <0>;
  master_i2c_speed = <300000>;
  clocks = <&clkc (((((25 + 25) + 26) + 18) + 20) + 4)>;
  clock-names = "clk_i2c";
 };
 i2c_a: i2c@c1108500{
  compatible = "amlogic, meson-i2c";
  dev_name = "i2c-A";
  status = "disabled";
  reg = <0x0 0xc1108500 0x0 0x20>;
  device_id = <1>;
  pinctrl-names="default";
  pinctrl-0=<&a_i2c_master>;
  #address-cells = <1>;
  #size-cells = <0>;
  use_pio = <0>;
  master_i2c_speed = <300000>;
  clocks = <&clkc (25 + 6)>;
  clock-names = "clk_i2c";
 };
 i2c_b: i2c@c11087c0{
  compatible = "amlogic, meson-i2c";
  dev_name = "i2c-B";
  status = "disabled";
  reg = <0x0 0xc11087c0 0x0 0x20>;
  device_id = <2>;
  pinctrl-names="default";
  pinctrl-0=<&b_i2c_master>;
  #address-cells = <1>;
  #size-cells = <0>;
  use_pio = <0>;
  master_i2c_speed = <300000>;
  clocks = <&clkc (25 + 6)>;
  clock-names = "clk_i2c";
 };
 i2c_c: i2c@c11087e0{
  compatible = "amlogic, meson-i2c";
  dev_name = "i2c-C";
  status = "disabled";
  reg = <0x0 0xc11087e0 0x0 0x20>;
  device_id = <3>;
  pinctrl-names="default";
  pinctrl-0=<&c_i2c_master>;
  #address-cells = <1>;
  #size-cells = <0>;
  use_pio = <0>;
  master_i2c_speed = <300000>;
  clocks = <&clkc (25 + 6)>;
  clock-names = "clk_i2c";
 };
 i2c_d: i2c@c1108d20{
  compatible = "amlogic, meson-i2c";
  dev_name = "i2c-D";
  status = "disabled";
  reg = <0x0 0xc1108d20 0x0 0x20>;
  device_id = <4>;
  pinctrl-names="default";
  pinctrl-0=<&d_i2c_master>;
  #address-cells = <1>;
  #size-cells = <0>;
  use_pio = <0>;
  master_i2c_speed = <300000>;
  clocks = <&clkc (25 + 6)>;
  clock-names = "clk_i2c";
 };

 pinctrl_aobus: pinctrl@14 {
  compatible = "amlogic,meson-gxl-aobus-pinctrl";
  #address-cells = <2>;
  #size-cells = <2>;
  ranges;

  gpio_ao: bank@14 {
   reg = <0x0 0xc8100014 0x0 0x8>,
         <0x0 0xc810002c 0x0 0x4>,
         <0x0 0xc8100024 0x0 0x8>,
      <0x0 0xc8100084 0x0 0x4>;
   interrupts = <0 200 1>,
    <0 201 1>;
   reg-names = "mux", "pull", "gpio", "irq";
   gpio-controller;
   #gpio-cells = <2>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };
 };

 pinctrl_periphs: pinctrl@4b0 {
  compatible = "amlogic,meson-gxl-periphs-pinctrl";
  #address-cells = <2>;
  #size-cells = <2>;
  ranges;

  gpio: bank@4b0 {
   reg = <0x0 0xc88344b0 0x0 0x28>,
         <0x0 0xc88344e8 0x0 0x14>,
         <0x0 0xc8834520 0x0 0x14>,
         <0x0 0xc8834430 0x0 0x40>,
      <0x0 0xc1109880 0x0 0x10>;
   interrupts = <0 64 1>,
    <0 65 1>,
    <0 66 1>,
    <0 67 1>,
    <0 68 1>,
    <0 69 1>,
    <0 70 1>,
    <0 71 1>;
   reg-names = "mux", "pull",
    "pull-enable", "gpio", "irq";
   gpio-controller;
   #gpio-cells = <2>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };
 };

 soc {
  compatible = "simple-bus";
  #address-cells = <2>;
  #size-cells = <2>;
  ranges;

  cbus: cbus@c1100000 {
   compatible = "simple-bus";
   reg = <0x0 0xc1100000 0x0 0x100000>;
   #address-cells = <2>;
   #size-cells = <2>;
   ranges = <0x0 0x0 0x0 0xc1100000 0x0 0x100000>;

   meson_clk_msr{
    compatible = "amlogic, gxl_measure";
    reg = <0x0 0x875c 0x0 0x4
     0x0 0x8764 0x0 0x4>;
   };
  };

  aobus: aobus@c8100000 {
   compatible = "simple-bus";
   reg = <0x0 0xc8100000 0x0 0x100000>;
   #address-cells = <2>;
   #size-cells = <2>;
   ranges = <0x0 0x0 0x0 0xc8100000 0x0 0x100000>;

   cpu_version{
    reg=<0x0 0x0220 0x0 0x4>;
   };
  };

  periphs: periphs@c8834000 {
   compatible = "simple-bus";
   reg = <0x0 0xc8834000 0x0 0x2000>;
   #address-cells = <2>;
   #size-cells = <2>;
   ranges = <0x0 0x0 0x0 0xc8834000 0x0 0x2000>;
  };

  hiubus: hiubus@c883c000 {
   compatible = "simple-bus";
   reg = <0x0 0xc883c000 0x0 0x2000>;
   #address-cells = <2>;
   #size-cells = <2>;
   ranges = <0x0 0x0 0x0 0xc883c000 0x0 0x2000>;

   clkc: clock-controller@0 {
    compatible = "amlogic,gxl-clkc";
    #clock-cells = <1>;
    reg = <0x0 0x0 0x0 0x3db>;
   };
  };

  apb: apb@d0000000 {
   compatible = "simple-bus";
   reg = <0x0 0xd0000000 0x0 0x200000>;
   #address-cells = <2>;
   #size-cells = <2>;
   ranges = <0x0 0x0 0x0 0xd0000000 0x0 0x200000>;
  };
 };
};

&pinctrl_aobus {
 remote_pins:remote_pin {
  mux {
   groups = "remote_input";
   function = "remote";
  };
 };

 sd_to_ao_uart_pins:sd_to_ao_uart_pins {
  mux {
   groups = "uart_tx_ao_a_0",
     "uart_rx_ao_a_0";
   function = "uart_ao";
   bias-pull-up;
   input-enable;
  };
 };

 ao_uart_pins:ao_uart {
  mux {
   groups = "uart_tx_ao_a_0",
    "uart_rx_ao_a_0";
   function = "uart_ao";
  };
 };

 ao_b_uart_pins:ao_b_uart {
  mux {
   groups = "uart_tx_ao_b_0",
     "uart_rx_ao_b_0";
   function = "uart_ao_b";
  };
 };
 ao_i2c_master:ao_i2c{
  mux {
   groups = "i2c_sda_ao",
    "i2c_sck_ao";
   function = "i2c_ao";
  };
 };

 hdmitx_aocec: hdmitx_aocec {
  mux {
   groups = "ao_cec";
   function = "ao_cec";
  };
 };

 hdmitx_eecec: hdmitx_eecec {
  mux {
   groups = "ee_cec";
   function = "ee_cec";
  };
 };
};

&pinctrl_periphs {
 external_eth_pins:external_eth_pins {
  mux {
   groups = "eth_mdio",
    "eth_mdc",
    "eth_clk_rx_clk",
    "eth_rx_dv",
    "eth_rxd0",
    "eth_rxd1",
    "eth_rxd2",
    "eth_rxd3",
    "eth_rgmii_tx_clk",
    "eth_tx_en",
    "eth_txd0",
    "eth_txd1",
    "eth_txd2",
    "eth_txd3";
   function = "eth";
  };
 };

 jtag_apao_pins:jtag_apao_pin {
  mux {
   groups = "jtag_tdi_0",
    "jtag_tdo_0",
    "jtag_clk_0",
    "jtag_tms_0";
   function = "jtag";
  };
 };

 jtag_apee_pins:jtag_apee_pin {
  mux {
   groups ="jtag_tdi_1",
    "jtag_tdo_1",
    "jtag_clk_1",
    "jtag_tms_1";
   function = "jtag";
  };
 };

 a_uart_pins:a_uart {
  mux {
   groups = "uart_tx_a",
    "uart_rx_a",
    "uart_cts_a",
    "uart_rts_a";
   function = "uart_a";
  };
 };

 b_uart_pins:b_uart {
  mux {
   groups = "uart_tx_b",
    "uart_rx_b",
    "uart_cts_b",
    "uart_rts_b";
   function = "uart_b";
  };
 };

 c_uart_pins:c_uart {
  mux {
   groups = "uart_tx_c",
    "uart_rx_c",
    "uart_cts_c",
    "uart_rts_c";
   function = "uart_c";
  };
 };

 wifi_32k_pins:wifi_32k_pins {
  mux {
   groups ="pwm_e";
   function = "pwm_e";
  };
 };
# 697 "arch/arm64/boot/dts/amlogic/mesongxl.dtsi"
 ao_to_sd_uart_pins:ao_to_sd_uart_pins {
   mux {
    groups = "uart_tx_ao_a_card4",
      "uart_rx_ao_a_card5";
    function = "uart_ao_a_card";
    bias-pull-up;
    input-enable;
   };
  };

 emmc_clk_cmd_pins:emmc_clk_cmd_pins {
  mux {
   groups = "emmc_cmd",
    "emmc_clk";
   function = "emmc";
   input-enable;
   bias-pull-up;
  };
 };


 emmc_conf_pull_up:emmc_conf_pull_up {
  mux {
   groups = "emmc_nand_d07",
    "emmc_clk",
    "emmc_cmd";
   function = "emmc";
   input-enable;
   bias-pull-up;
  };
 };

 emmc_conf_pull_done:emmc_conf_pull_done {
  mux {
   groups = "emmc_ds";
   function = "emmc";
   input-enable;
   bias-pull-down;
  };
 };

 sd_clk_cmd_pins:sd_clk_cmd_pins{
  mux {
   groups = "sdcard_cmd",
    "sdcard_clk";
   function = "sdcard";
   input-enable;
   bias-pull-up;
  };
 };

 sd_all_pins:sd_all_pins{
  mux {
   groups = "sdcard_d0",
    "sdcard_d1",
    "sdcard_d2",
    "sdcard_d3",
    "sdcard_cmd",
    "sdcard_clk";
   function = "sdcard";
   input-enable;
   bias-pull-up;
  };
 };

 sdio_clk_cmd_pins:sdio_clk_cmd_pins {
  mux {
   groups = "sdio_clk",
    "sdio_cmd";
   function = "sdio";
   input-enable;
   bias-pull-up;
  };
 };

 sdio_all_pins:sdio_all_pins {
  mux {
   groups = "sdio_d0",
    "sdio_d1",
    "sdio_d2",
    "sdio_d3",
    "sdio_clk",
    "sdio_cmd";
   function = "sdio";
   input-enable;
   bias-pull-up;
  };
 };

 nand_pulldown: nand_pulldown {
  mux {
   groups = "emmc_nand_d07",
    "emmc_ds";
   function = "emmc";
   bias-pull-down;
  };
 };

 nand_pullup: nand_pullup {
  mux {
   groups = "emmc_clk",
    "emmc_cmd";
   function = "emmc";
   bias-pull-up;
  };
 };

 all_nand_pins: all_nand_pins {
  mux {
   groups = "emmc_nand_d07",
    "nand_ce0",
    "nand_ce1",
    "nand_rb0",
    "nand_ale",
    "nand_cle",
    "nand_wen_clk",
    "nand_ren_wr",
    "nand_dqs";
   function = "nand";
   input-enable;
  };
 };

 nand_cs_pins: nand_cs {
  mux {
   groups = "nand_ce0",
    "nand_ce1";
   function = "nand";
  };
 };

 hdmitx_hpd: hdmitx_hpd {
  mux {
   groups = "hdmi_hpd";
   function = "hdmi_hpd";
  };
 };

 hdmitx_ddc: hdmitx_ddc {
  mux {
   groups = "hdmi_sda",
    "hdmi_scl";
   function = "hdmi_ddc";
  };
 };

 a_i2c_master:a_i2c {
  mux {
   groups = "i2c_sda_a",
    "i2c_scl_a";
   function = "i2c_a";
  };
 };

 b_i2c_master:b_i2c {
  mux {
   groups = "i2c_sda_b",
    "i2c_scl_b";
   function = "i2c_b";
  };
 };



 c_i2c_master:c_i2c {
  mux {
   groups = "i2c_sda_c_dv28",
    "i2c_scl_c_dv29";
   function = "i2c_c";
  };
 };
 c_i2c_master_pin1:c_i2c_pin1{
  mux {
   groups = "i2c_sda_c_dv18",
    "i2c_scl_c_dv19";
   function = "i2c_c";
  };
 };

 d_i2c_master:d_i2c {
  mux {
  groups = "i2c_sda_d",
   "i2c_scl_d";
  function = "i2c_d";
  };
 };

 spicc_pulldown_z11z12z13: spicc_pulldown_z11z12z13 {
  mux {
   groups = "spi_sclk_0",
    "spi_miso_0",
    "spi_mosi_0";
   function = "spi";
  };
 };

 spicc_pullup_z11z12z13: spicc_pullup_z11z12z13 {
  mux {
   groups = "spi_sclk_0",
    "spi_miso_0",
    "spi_mosi_0";
   function = "spi";
  };
 };

 spicc_pulldown_x8x9x11: spicc_pulldown_x8x9x11 {
  mux {
   groups = "spi_sclk_1",
    "spi_miso_1",
    "spi_mosi_1";
   function = "spi";
   bias-pull-down;
  };
 };

 spicc_pullup_x8x9x11: spicc_pullup_x8x9x11 {
  mux {
   groups = "spi_sclk_1",
    "spi_miso_1",
    "spi_mosi_1";
   function = "spi";
   bias-pull-up;
  };
 };

 audio_i2s_pins:audio_i2s {
  mux {
   groups = "i2s_am_clk",
    "i2s_ao_clk_out",
    "i2s_lr_clk_out",
    "i2sout_ch01";
   function = "i2s";
  };
 };

 audio_spdif_pins:audio_spdif {
  mux {
   groups = "spdif_out";
   function = "spdif_out";
  };
 };

 audio_spdif_in_pins:audio_spdif_in {
  mux {
   groups = "spdif_in_z14";
   function = "spdif_in";
  };
 };

 audio_spdif_in_1_pins:audio_spdif_in_1 {
  mux {
   groups = "spdif_in_h4";
   function = "spdif_in";
  };
 };

 audio_pcm_pins:audio_pcm {
  mux {
   groups = "pcm_out_a",
    "pcm_in_a",
    "pcm_fs_a",
    "pcm_clk_a";
   function = "pcm_a";
  };
 };
 aml_dmic_pins:audio_dmic {
  mux {
   groups = "dmic_in_dv24",
     "dmic_clk_dv25";
   function = "dmic";
  };
 };

};

&periphs {
 rng {
  compatible = "amlogic,meson-rng";
  reg = <0x0 0x0 0x0 0x4>;
 };
};

&cbus{
 reset: reset-controller@4404 {
  compatible = "amlogic,reset";
  reg = <0x0 0x04404 0x0 0x20>;
  #reset-cells = <1>;
 };
};

/{
 aml_aes {
  compatible = "amlogic,aes_dma";
  dev_name = "aml_aes_dma";
  status = "okay";
  interrupts = <0 188 1 0 189 1>;
  reg = <0x0 0xc883e000 0x0 0x28>;
 };

 aml_tdes {
  compatible = "amlogic,des_dma,tdes_dma";
  dev_name = "aml_tdes_dma";
  status = "okay";
  interrupts = <0 188 1 0 189 1>;
  reg = <0x0 0xc883e000 0x0 0x28>;
 };

 aml_sha {
  compatible = "amlogic,sha_dma";
  dev_name = "aml_sha_dma";
  status = "okay";
  interrupts = <0 188 1 0 189 1>;
  reg = <0x0 0xc883e000 0x0 0x28>;
 };

 saradc: saradc {
  compatible = "amlogic, saradc";
  status = "okay";
  clocks = <&clkc (((25 + 25) + 26) + 12)>;
  clock-names = "saradc_clk";
  reg = <0x0 0xc1108680 0x0 0x30
         0x0 0xc883c3d8 0x0 0x08>;
 };

 efuse: efuse{
  compatible = "amlogic, efuse";
  read_cmd = <0x82000030>;
  write_cmd = <0x82000031>;
  get_max_cmd = <0x82000033>;
  key = <&efusekey>;
  clocks = <&clkc ((25 + 25) + 24)>;
  clock-names = "efuse_clk";
  status = "disabled";
 };

 efusekey:efusekey{
  keynum = <4>;
  key0 = <&key_0>;
  key1 = <&key_1>;
  key2 = <&key_2>;
  key3 = <&key_3>;
  key_0:key_0{
   keyname = "mac";
   offset = <0>;
   size = <6>;
  };
  key_1:key_1{
   keyname = "mac_bt";
   offset = <6>;
   size = <6>;
  };
  key_2:key_2{
   keyname = "mac_wifi";
   offset = <12>;
   size = <6>;
  };
  key_3:key_3{
   keyname = "usid";
   offset = <18>;
   size = <16>;
  };
 };

 remote:rc@c8100580 {
  compatible = "amlogic, aml_remote";
  dev_name = "meson-remote";
  reg = <0x0 0xc8100580 0x00 0x44>,
   <0x0 0xc8100480 0x00 0x20>;
  status = "okay";
  protocol = <0x01>;
  interrupts = <0 196 1>;
  pinctrl-names = "default";
  pinctrl-0 = <&remote_pins>;
  map = <&custom_maps>;
  max_frame_time = <200>;
 };

 custom_maps:custom_maps {
  mapnum = <3>;
  map0 = <&map_0>;
  map1 = <&map_1>;
  map2 = <&map_2>;
  map_0: map_0{
   mapname = "amlogic-remote-1";
   customcode = <0xfb04>;
   release_delay = <80>;
   size = <50>;
   keymap = <((((0x47) & 0xFFFF)<<16) | ((11) & 0xFFFF))
    ((((0x13) & 0xFFFF)<<16) | ((2) & 0xFFFF))
    ((((0x10) & 0xFFFF)<<16) | ((3) & 0xFFFF))
    ((((0x11) & 0xFFFF)<<16) | ((4) & 0xFFFF))
    ((((0x0F) & 0xFFFF)<<16) | ((5) & 0xFFFF))
    ((((0x0C) & 0xFFFF)<<16) | ((6) & 0xFFFF))
    ((((0x0D) & 0xFFFF)<<16) | ((7) & 0xFFFF))
    ((((0x0B) & 0xFFFF)<<16) | ((8) & 0xFFFF))
    ((((0x08) & 0xFFFF)<<16) | ((9) & 0xFFFF))
    ((((0x09) & 0xFFFF)<<16) | ((10) & 0xFFFF))
    ((((0x5C) & 0xFFFF)<<16) | ((97) & 0xFFFF))
    ((((0x51) & 0xFFFF)<<16) | ((61) & 0xFFFF))
    ((((0x50) & 0xFFFF)<<16) | ((62) & 0xFFFF))
    ((((0x40) & 0xFFFF)<<16) | ((63) & 0xFFFF))
    ((((0x4d) & 0xFFFF)<<16) | ((64) & 0xFFFF))
    ((((0x43) & 0xFFFF)<<16) | ((65) & 0xFFFF))
    ((((0x17) & 0xFFFF)<<16) | ((66) & 0xFFFF))
    ((((0x00) & 0xFFFF)<<16) | ((67) & 0xFFFF))
    ((((0x01) & 0xFFFF)<<16) | ((68) & 0xFFFF))
    ((((0x16) & 0xFFFF)<<16) | ((87) & 0xFFFF))
    ((((0x49) & 0xFFFF)<<16) | ((14) & 0xFFFF))
    ((((0x06) & 0xFFFF)<<16) | ((130) & 0xFFFF))
    ((((0x14) & 0xFFFF)<<16) | ((131) & 0xFFFF))
    ((((0x44) & 0xFFFF)<<16) | ((103) & 0xFFFF))
    ((((0x1D) & 0xFFFF)<<16) | ((108) & 0xFFFF))
    ((((0x1C) & 0xFFFF)<<16) | ((105) & 0xFFFF))
    ((((0x48) & 0xFFFF)<<16) | ((106) & 0xFFFF))
    ((((0x53) & 0xFFFF)<<16) | ((125) & 0xFFFF))
    ((((0x45) & 0xFFFF)<<16) | ((104) & 0xFFFF))
    ((((0x19) & 0xFFFF)<<16) | ((109) & 0xFFFF))
    ((((0x52) & 0xFFFF)<<16) | ((119) & 0xFFFF))
    ((((0x05) & 0xFFFF)<<16) | ((122) & 0xFFFF))
    ((((0x59) & 0xFFFF)<<16) | ((123) & 0xFFFF))
    ((((0x1b) & 0xFFFF)<<16) | ((120) & 0xFFFF))
    ((((0x04) & 0xFFFF)<<16) | ((121) & 0xFFFF))
    ((((0x1A) & 0xFFFF)<<16) | ((116) & 0xFFFF))
    ((((0x0A) & 0xFFFF)<<16) | ((15) & 0xFFFF))
    ((((0x0e) & 0xFFFF)<<16) | ((113) & 0xFFFF))
    ((((0x1F) & 0xFFFF)<<16) | ((102) & 0xFFFF))
    ((((0x1e) & 0xFFFF)<<16) | ((132) & 0xFFFF))
    ((((0x07) & 0xFFFF)<<16) | ((133) & 0xFFFF))
    ((((0x12) & 0xFFFF)<<16) | ((134) & 0xFFFF))
    ((((0x54) & 0xFFFF)<<16) | ((135) & 0xFFFF))
    ((((0x02) & 0xFFFF)<<16) | ((136) & 0xFFFF))
    ((((0x4f) & 0xFFFF)<<16) | ((30) & 0xFFFF))
    ((((0x42) & 0xFFFF)<<16) | ((48) & 0xFFFF))
    ((((0x5d) & 0xFFFF)<<16) | ((46) & 0xFFFF))
    ((((0x4c) & 0xFFFF)<<16) | ((32) & 0xFFFF))
    ((((0x58) & 0xFFFF)<<16) | ((137) & 0xFFFF))
    ((((0x55) & 0xFFFF)<<16) | ((140) & 0xFFFF))>;
  };
  map_1: map_1{
   mapname = "amlogic-remote-2";
   customcode = <0xfe01>;
   release_delay = <80>;
   size = <53>;
   keymap = <((((0x01) & 0xFFFF)<<16) | ((2) & 0xFFFF))
    ((((0x02) & 0xFFFF)<<16) | ((3) & 0xFFFF))
    ((((0x03) & 0xFFFF)<<16) | ((4) & 0xFFFF))
    ((((0x04) & 0xFFFF)<<16) | ((5) & 0xFFFF))
    ((((0x05) & 0xFFFF)<<16) | ((6) & 0xFFFF))
    ((((0x06) & 0xFFFF)<<16) | ((7) & 0xFFFF))
    ((((0x07) & 0xFFFF)<<16) | ((8) & 0xFFFF))
    ((((0x08) & 0xFFFF)<<16) | ((9) & 0xFFFF))
    ((((0x09) & 0xFFFF)<<16) | ((10) & 0xFFFF))
    ((((0x0a) & 0xFFFF)<<16) | ((11) & 0xFFFF))
    ((((0x1F) & 0xFFFF)<<16) | ((0x1d2) & 0xFFFF))
    ((((0x15) & 0xFFFF)<<16) | ((139) & 0xFFFF))
    ((((0x16) & 0xFFFF)<<16) | ((15) & 0xFFFF))
    ((((0x0c) & 0xFFFF)<<16) | ((0x192) & 0xFFFF))
    ((((0x0d) & 0xFFFF)<<16) | ((0x193) & 0xFFFF))
    ((((0x0e) & 0xFFFF)<<16) | ((115) & 0xFFFF))
    ((((0x0f) & 0xFFFF)<<16) | ((114) & 0xFFFF))
    ((((0x11) & 0xFFFF)<<16) | ((102) & 0xFFFF))
    ((((0x1c) & 0xFFFF)<<16) | ((106) & 0xFFFF))
    ((((0x1b) & 0xFFFF)<<16) | ((105) & 0xFFFF))
    ((((0x19) & 0xFFFF)<<16) | ((103) & 0xFFFF))
    ((((0x1a) & 0xFFFF)<<16) | ((108) & 0xFFFF))
    ((((0x1d) & 0xFFFF)<<16) | ((28) & 0xFFFF))
    ((((0x17) & 0xFFFF)<<16) | ((113) & 0xFFFF))
    ((((0x49) & 0xFFFF)<<16) | ((219) & 0xFFFF))
    ((((0x43) & 0xFFFF)<<16) | ((158) & 0xFFFF))
    ((((0x12) & 0xFFFF)<<16) | ((0x1d5) & 0xFFFF))
    ((((0x14) & 0xFFFF)<<16) | ((0x1d6) & 0xFFFF))
    ((((0x18) & 0xFFFF)<<16) | ((0x1d7) & 0xFFFF))
    ((((0x59) & 0xFFFF)<<16) | ((0x166) & 0xFFFF))
    ((((0x5a) & 0xFFFF)<<16) | ((166) & 0xFFFF))
    ((((0x10) & 0xFFFF)<<16) | ((116) & 0xFFFF))
    ((((0x42) & 0xFFFF)<<16) | ((165) & 0xFFFF))
    ((((0x44) & 0xFFFF)<<16) | ((163) & 0xFFFF))
    ((((0x1e) & 0xFFFF)<<16) | ((168) & 0xFFFF))
    ((((0x4b) & 0xFFFF)<<16) | ((208) & 0xFFFF))
    ((((0x58) & 0xFFFF)<<16) | ((164) & 0xFFFF))
    ((((0x46) & 0xFFFF)<<16) | ((130) & 0xFFFF))
    ((((0x40) & 0xFFFF)<<16) | ((131) & 0xFFFF))
    ((((0x38) & 0xFFFF)<<16) | ((70) & 0xFFFF))
    ((((0x57) & 0xFFFF)<<16) | ((0x1d0) & 0xFFFF))
    ((((0x5b) & 0xFFFF)<<16) | ((0x1d1) & 0xFFFF))
    ((((0x54) & 0xFFFF)<<16) | ((0x18e) & 0xFFFF))
    ((((0x4c) & 0xFFFF)<<16) | ((0x18f) & 0xFFFF))
    ((((0x4e) & 0xFFFF)<<16) | ((0x190) & 0xFFFF))
    ((((0x55) & 0xFFFF)<<16) | ((0x191) & 0xFFFF))
    ((((0x53) & 0xFFFF)<<16) | ((237) & 0xFFFF))
    ((((0x52) & 0xFFFF)<<16) | ((238) & 0xFFFF))
    ((((0x39) & 0xFFFF)<<16) | ((212) & 0xFFFF))
    ((((0x41) & 0xFFFF)<<16) | ((213) & 0xFFFF))
    ((((0x0b) & 0xFFFF)<<16) | ((214) & 0xFFFF))
    ((((0x00) & 0xFFFF)<<16) | ((216) & 0xFFFF))
    ((((0x13) & 0xFFFF)<<16) | ((217) & 0xFFFF))>;
  };
  map_2: map_2{
   mapname = "amlogic-remote-3";
   customcode = <0xbd02>;
   release_delay = <80>;
   size = <17>;
   keymap = <((((0xca) & 0xFFFF)<<16) | ((103) & 0xFFFF))
    ((((0xd2) & 0xFFFF)<<16) | ((108) & 0xFFFF))
    ((((0x99) & 0xFFFF)<<16) | ((105) & 0xFFFF))
    ((((0xc1) & 0xFFFF)<<16) | ((106) & 0xFFFF))
    ((((0xce) & 0xFFFF)<<16) | ((97) & 0xFFFF))
    ((((0x45) & 0xFFFF)<<16) | ((116) & 0xFFFF))
    ((((0xc5) & 0xFFFF)<<16) | ((133) & 0xFFFF))
    ((((0x80) & 0xFFFF)<<16) | ((113) & 0xFFFF))
    ((((0xd0) & 0xFFFF)<<16) | ((15) & 0xFFFF))
    ((((0xd6) & 0xFFFF)<<16) | ((125) & 0xFFFF))
    ((((0x95) & 0xFFFF)<<16) | ((102) & 0xFFFF))
    ((((0xdd) & 0xFFFF)<<16) | ((104) & 0xFFFF))
    ((((0x8c) & 0xFFFF)<<16) | ((109) & 0xFFFF))
    ((((0x89) & 0xFFFF)<<16) | ((131) & 0xFFFF))
    ((((0x9c) & 0xFFFF)<<16) | ((130) & 0xFFFF))
    ((((0x9a) & 0xFFFF)<<16) | ((120) & 0xFFFF))
    ((((0xcd) & 0xFFFF)<<16) | ((121) & 0xFFFF))>;
  };
 };
 aml_reboot{
  compatible = "aml, reboot";
  sys_reset = <0x84000009>;
  sys_poweroff = <0x84000008>;
 };

 rtc{
  compatible = "amlogic, aml_vrtc";
  alarm_reg_addr = <0xc81000a8>;
  timer_e_addr = <0xc1109988>;
  init_date = "2017/01/01";
  status = "okay";
 };

 pwm:meson-pwm {
  compatible = "amlogic, meson-pwm";
  status = "okay";
  #pwm-cells = <2>;
  pwm-outputs = <0>,<1>,<2>,<3>,
    <4>,<5>,<6>,<7>,
    <8>,<9>,<10>,<11>,
    <12>,<13>,<14>,<15>;
  reg = <0x0 0xc1108550 0x0 0x1c>,
        <0x0 0xc1108650 0x0 0x1c>,
        <0x0 0xc11086c0 0x0 0x1c>,
        <0x0 0xc8100550 0x0 0x1c>;
  clocks = <&xtal>,
    <&clkc >,
    <&clkc 6>,
    <&clkc 5>;
  clock-names = "xtal",
     "vid_pll_clk",
     "fclk_div4",
     "fclk_div3";
  clock-select = <0>,<0>,<0>,<0>,
      <0>,<0>,<0>,<0>;


 };
};

&gpu{

 tbl = <&clk125_cfg &clk285_cfg &clk400_cfg
     &clk500_cfg &clk666_cfg &clk750_cfg &clk750_cfg>;
};
# 22 "arch/arm64/boot/dts/amlogic/gxl_p212_2g.dts" 2
/ {
 model = "Amlogic";
 amlogic-dt-id = "gxl_p212_2g";
 compatible = "amlogic, Gxl";
 interrupt-parent = <&gic>;
 #address-cells = <2>;
 #size-cells = <2>;

 aliases {
  serial0 = &uart_AO;
  serial1 = &uart_A;
  serial2 = &uart_B;
  serial3 = &uart_C;
  serial4 = &uart_AO_B;
 };

 ion_dev {
  compatible = "amlogic, ion_dev";
  memory-region = <&ion_reserved>;
 };

 memory@00000000 {
  device_type = "memory";
  linux,usable-memory = <0x0 0x0100000 0x0 0x7ff00000>;
 };

 reserved-memory {
  #address-cells = <2>;
  #size-cells = <2>;
  ranges;

  secmon_reserved:linux,secmon {
   compatible = "shared-dma-pool";
   reusable;
   size = <0x0 0x400000>;
   alignment = <0x0 0x400000>;
   alloc-ranges = <0x0 0x05000000 0x0 0x400000>;
  };
  secos_reserved:linux,secos {
   status = "disable";
   compatible = "amlogic, aml_secos_memory";
   reg = <0x0 0x05300000 0x0 0x2000000>;
   no-map;
  };
  fb_reserved:linux,meson-fb {
   compatible = "shared-dma-pool";
   reusable;
   size = <0x0 0x2000000>;
   alignment = <0x0 0x400000>;
   alloc-ranges = <0x0 0x7e000000 0x0 0x2000000>;
  };







  di_cma_reserved:linux,di_cma {
   compatible = "shared-dma-pool";
   reusable;

   size = <0x0 0x2000000>;
   alignment = <0x0 0x400000>;
  };

  ion_reserved:linux,ion-dev {
   compatible = "amlogic, idev-mem";
   size = <0x0 0x0>;
  };
# 103 "arch/arm64/boot/dts/amlogic/gxl_p212_2g.dts"
  vdin1_cma_reserved:linux,vdin1_cma {
   compatible = "shared-dma-pool";
   reusable;

   size = <0x0 0x01000000>;
   alignment = <0x0 0x400000>;
  };

  ppmgr_reserved:linux,ppmgr {
   compatible = "shared-dma-pool";
   size = <0x0 0x0>;
  };

  codec_mm_cma:linux,codec_mm_cma {
   compatible = "shared-dma-pool";
   reusable;
   size = <0x0 0x10400000>;
   alignment = <0x0 0x400000>;
   linux,contiguous-region;
  };
  picdec_cma_reserved:linux,picdec {
   compatible = "shared-dma-pool";
   reusable;
   size = <0x0 0x0>;
   alignment = <0x0 0x0>;
   linux,contiguous-region;
  };

  codec_mm_reserved:linux,codec_mm_reserved {
   compatible = "amlogic, codec-mm-reserved";
   size = <0x0 0x0>;
   alignment = <0x0 0x100000>;

  };
 };

 bt-dev{
  compatible = "amlogic, bt-dev";
  dev_name = "bt-dev";
  status = "okay";
  gpio_reset = <&gpio 96 0>;
 };

 wifi{
  compatible = "amlogic, aml_wifi";
  dev_name = "aml_wifi";
  status = "okay";
  interrupt_pin = <&gpio 86 0>;
  interrupts = < 0 68 4>;
  irq_trigger_type = "GPIO_IRQ_LOW";
  power_on_pin = <&gpio 85 0>;
  pinctrl-names = "wifi_32k_pins";
  pinctrl-0 = <&wifi_32k_pins>;
  pwm_config = <&wifi_pwm_conf>;
 };

 wifi_pwm_conf:wifi_pwm_conf{
  pwm_channel1 = <4>;
  pwm_channel2 = <12>;
  pwm_channel1_conf = <30541 15270 6>;
  pwm_channel2_conf = <30518 15259 9>;
 };

 sd_emmc_c: emmc@d0074000 {
  status = "okay";
  compatible = "amlogic, meson-aml-mmc";
  reg = <0x0 0xd0074000 0x0 0x2000>;
  interrupts = <0 218 1>;
  pinctrl-names = "emmc_clk_cmd_pins", "emmc_all_pins";
  pinctrl-0 = <&emmc_clk_cmd_pins>;
  pinctrl-1 = <&emmc_conf_pull_up &emmc_conf_pull_done>;
  clocks = <&clkc (25 + 21)>,
      <&clkc ((((((25 + 25) + 26) + 18) + 20) + 5) + 11)>,
      <&clkc 4>;
  clock-names = "core", "clkin0", "clkin1";

  bus-width = <8>;
  cap-sd-highspeed;
  cap-mmc-highspeed;
  mmc-ddr-1_8v;
  mmc-hs200-1_8v;

  max-frequency = <200000000>;
  non-removable;
  disable-wp;
  emmc {
   status = "disabled";
   pinname = "emmc";
   ocr_avail = <0x200080>;
   caps = "MMC_CAP_8_BIT_DATA",
     "MMC_CAP_MMC_HIGHSPEED",
     "MMC_CAP_SD_HIGHSPEED",
     "MMC_CAP_NONREMOVABLE",
     "MMC_CAP_1_8V_DDR",
     "MMC_CAP_HW_RESET",
     "MMC_CAP_ERASE",
     "MMC_CAP_CMD23";
   caps2 = "MMC_CAP2_HS200", "MMC_CAP2_HS400";
   f_min = <300000>;
   f_max = <100000000>;
   max_req_size = <0x20000>;
   gpio_dat3 = <&gpio 29 0>;
   hw_reset = <&gpio 35 0>;
   card_type = <1>;



  };
 };

 sd_emmc_b:sd@d0072000 {
  status = "okay";
  compatible = "amlogic, meson-aml-mmc";
  reg = <0x0 0xd0072000 0x0 0x2000>;
  interrupts = <0 217 1>;
  pinctrl-names = "sd_all_pins",
   "sd_clk_cmd_pins",
   "sd_clk_cmd_uart_pins",
   "sd_to_ao_uart_pins",
   "ao_to_sd_uart_pins";
  pinctrl-0 = <&sd_all_pins>;
  pinctrl-1 = <&sd_clk_cmd_pins>;
  pinctrl-2 = <&sd_clk_cmd_pins &ao_to_sd_uart_pins>;
  pinctrl-3 = <&sd_to_ao_uart_pins>;
  pinctrl-4 = <&ao_to_sd_uart_pins>;
  clocks = <&clkc (25 + 20)>,
      <&clkc ((((((25 + 25) + 26) + 18) + 20) + 5) + 7)>,
      <&clkc 4>;
  clock-names = "core", "clkin0", "clkin1";

  bus-width = <4>;
  cap-sd-highspeed;
  max-frequency = <100000000>;
  disable-wp;
  sd {
   status = "disabled";
   pinname = "sd";
   ocr_avail = <0x200080>;
   caps = "MMC_CAP_4_BIT_DATA",
     "MMC_CAP_MMC_HIGHSPEED",
     "MMC_CAP_SD_HIGHSPEED";





   f_min = <400000>;
   f_max = <100000000>;
   max_req_size = <0x20000>;
   gpio_dat3 = <&gpio 46 0>;
   jtag_pin = <&gpio 42 0>;
   gpio_cd = <&gpio 48 0>;
   card_type = <5>;
# 264 "arch/arm64/boot/dts/amlogic/gxl_p212_2g.dts"
  };
 };

 sd_emmc_a:sdio@d0070000 {
  status = "okay";
  compatible = "amlogic, meson-aml-mmc";
  reg = <0x0 0xd0070000 0x0 0x2000>;
  interrupts = <0 216 4>;
  pinctrl-names = "sdio_clk_cmd_pins", "sdio_all_pins";
  pinctrl-0 = <&sdio_clk_cmd_pins>;
  pinctrl-1 = <&sdio_all_pins>;
  clocks = <&clkc (25 + 19)>,
      <&clkc ((((((25 + 25) + 26) + 18) + 20) + 5) + 3)>,
      <&clkc 4>;
  clock-names = "core", "clkin0", "clkin1";

  bus-width = <4>;
  cap-sd-highspeed;
  cap-mmc-highspeed;
  max-frequency = <100000000>;
  non-removable;
  disable-wp;
  sdio {
   status = "disabled";
   pinname = "sdio";
   ocr_avail = <0x200080>;
   caps = "MMC_CAP_4_BIT_DATA",
     "MMC_CAP_MMC_HIGHSPEED",
     "MMC_CAP_SD_HIGHSPEED",
     "MMC_CAP_NONREMOVABLE",
     "MMC_CAP_UHS_SDR12",
     "MMC_CAP_UHS_SDR25",
     "MMC_CAP_UHS_SDR50",
     "MMC_CAP_UHS_SDR104",
     "MMC_PM_KEEP_POWER",
     "MMC_CAP_SDIO_IRQ";
   f_min = <400000>;
   f_max = <200000000>;
   max_req_size = <0x20000>;
   card_type = <3>;



  };
 };
 mtd_nand{
  compatible = "amlogic, aml_mtd_nand";
  dev_name = "mtdnand";
  status = "disabled";
  reg = <0x0 0xd0074800 0x0 0x200>;
  interrupts = < 0 34 1 >;
  pinctrl-names = "nand_rb_mod","nand_norb_mod", "nand_cs_only";
  pinctrl-0 = <&all_nand_pins>;
  pinctrl-1 = <&all_nand_pins>;
  pinctrl-2 = <&nand_cs_pins>;
  device_id = <0>;
  plat-names = "bootloader","nandnormal";
  plat-num = <2>;
  plat-part-0 = <&bootloader>;
  plat-part-1 = <&nandnormal>;
  bootloader: bootloader{
   enable_pad ="ce0";
   busy_pad = "rb0";
   timming_mode = "mode5";
   bch_mode = "bch60_1k";
   t_rea = <20>;
   t_rhoh = <15>;
   chip_num = <1>;
   part_num = <0>;
   rb_detect = <1>;
  };
  nandnormal: nandnormal{
   enable_pad ="ce0","ce1";
   busy_pad = "rb0","rb1";
   timming_mode = "mode5";
   bch_mode = "bch60_1k";
   plane_mode = "twoplane";
   t_rea = <20>;
   t_rhoh = <15>;
   chip_num = <2>;
   part_num = <3>;
   partition = <&nand_partitions>;
   rb_detect = <1>;
  };
  nand_partitions:nand_partition{
   logo{
    offset=<0x0 0x0>;
    size=<0x0 0x200000>;
   };
   recovery{
    offset=<0x0 0x0>;
    size=<0x0 0x1000000>;
   };
   boot{
    offset=<0x0 0x0>;
    size=<0x0 0xC00000>;
   };
   system{
    offset=<0x0 0x0>;
    size=<0x0 0xDC40000>;
   };
   data{
    offset=<0xffffffff 0xffffffff>;
    size=<0x0 0x0>;
   };
  };
 };

 ethmac: ethernet@0xc9410000 {
   compatible = "amlogic, gxbb-eth-dwmac";
   reg = <0x0 0xc9410000 0x0 0x10000
   0x0 0xc8834540 0x0 0x8
   0x0 0xc8834558 0x0 0xc>;
   interrupts = <0 8 1>;
   pinctrl-names = "external_eth_pins";
   pinctrl-0 = <&external_eth_pins>;
   rst_pin-gpios = <&gpio 14 0>;
   GPIOZ4_pin-gpios = <&gpio 4 0>;
   GPIOZ5_pin-gpios = <&gpio 5 0>;
   mc_val_internal_phy = <0x1800>;
   mc_val_external_phy = <0x1621>;
   cali_val = <0x20000>;
   interrupt-names = "macirq";
   clocks = <&clkc ((25 + 25) + 2)>;
   clock-names = "ethclk81";
   internal_phy=<1>;
 };

 codec_io {
  compatible = "amlogic, codec_io";
  #address-cells=<2>;
  #size-cells=<2>;
  ranges;
  io_cbus_base{
   reg = <0x0 0xC1100000 0x0 0x100000>;
  };
  io_dos_base{
   reg = <0x0 0xc8820000 0x0 0x10000>;
  };
  io_hiubus_base{
   reg = <0x0 0xc883c000 0x0 0x2000>;
  };
  io_aobus_base{
   reg = <0x0 0xc8100000 0x0 0x100000>;
  };
  io_vcbus_base{
   reg = <0x0 0xd0100000 0x0 0x40000>;
  };
  io_dmc_base{
   reg = <0x0 0xc8838000 0x0 0x400>;
  };
 };

 codec_mm {
  compatible = "amlogic, codec, mm";
  memory-region = <&codec_mm_cma &codec_mm_reserved>;
  dev_name = "codec_mm";
  status = "okay";
 };

 canvas{
  compatible = "amlogic, meson, canvas";
  dev_name = "amlogic-canvas";
  status = "ok";
  reg = <0x0 0xc8838000 0x0 0x400>;
 };

 mesonstream {
  compatible = "amlogic, codec, streambuf";
  dev_name = "mesonstream";
  status = "okay";
  clocks = <&clkc ((25 + 25) + 20)
   &clkc ((25 + 25) + 3)
   &clkc (25 + 1)
   &clkc ((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 8)
   &clkc ((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 17)
   &clkc ((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 26)>;
  clock-names = "parser_top",
   "demux",
   "vdec",
   "clk_vdec_mux",
   "clk_hcodec_mux",
   "clk_hevc_mux";
 };

 vdec {
  compatible = "amlogic, vdec";
  dev_name = "vdec.0";
  status = "okay";
  interrupts = <0 3 1
   0 23 1
   0 32 1
   0 43 1
   0 44 1
   0 45 1>;
  interrupt-names = "vsync",
   "demux",
   "parser",
   "mailbox_0",
   "mailbox_1",
   "mailbox_2";
 };

 aml_sensor0: aml-sensor@0 {
  compatible = "amlogic, aml-thermal";
  device_name = "thermal";
  #thermal-sensor-cells = <1>;
  cooling_devices {
   cpufreq_cool_cluster0 {
    min_state = <1000000>;
    dyn_coeff = <140>;
    cluster_id = <0>;
    node_name = "cpufreq_cool0";
    device_type = "cpufreq";
   };
   cpucore_cool_cluster0 {
    min_state = <1>;
    dyn_coeff = <0>;
    cluster_id = <0>;
    node_name = "cpucore_cool0";
    device_type = "cpucore";
   };
   gpufreq_cool {
    min_state = <400>;
    dyn_coeff = <437>;
    cluster_id = <0>;
    node_name = "gpufreq_cool0";
    device_type = "gpufreq";
   };
   gpucore_cool {
    min_state = <1>;
    dyn_coeff = <0>;
    cluster_id = <0>;
    node_name = "gpucore_cool0";
    device_type = "gpucore";
   };
  };
  cpufreq_cool0:cpufreq_cool0 {
   #cooling-cells = <2>;
  };
  cpucore_cool0:cpucore_cool0 {
   #cooling-cells = <2>;
  };
  gpufreq_cool0:gpufreq_cool0 {
   #cooling-cells = <2>;
  };
  gpucore_cool0:gpucore_cool0 {
   #cooling-cells = <2>;
  };
 };
 thermal-zones {
  soc_thermal {
   polling-delay = <1000>;
   polling-delay-passive = <100>;
   sustainable-power = <2150>;

   thermal-sensors = <&aml_sensor0 3>;

   trips {
    switch_on: trip-point@0 {
     temperature = <70000>;
     hysteresis = <1000>;
     type = "passive";
    };
    control: trip-point@1 {
     temperature = <80000>;
     hysteresis = <1000>;
     type = "passive";
    };
    hot: trip-point@2 {
     temperature = <85000>;
     hysteresis = <5000>;
     type = "hot";
    };
    critical: trip-point@3 {
     temperature = <260000>;
     hysteresis = <1000>;
     type = "critical";
    };
   };

   cooling-maps {
    cpufreq_cooling_map {
     trip = <&control>;
     cooling-device = <&cpufreq_cool0 0 4>;
     contribution = <1024>;
    };
    cpucore_cooling_map {
     trip = <&control>;
     cooling-device = <&cpucore_cool0 0 3>;
     contribution = <1024>;
    };
    gpufreq_cooling_map {
     trip = <&control>;
     cooling-device = <&gpufreq_cool0 0 4>;
     contribution = <1024>;
    };
    gpucore_cooling_map {
     trip = <&control>;
     cooling-device = <&gpucore_cool0 0 2>;
     contribution = <1024>;
    };
   };
  };
 };

 dwc3: dwc3@c9000000 {
  compatible = "synopsys, dwc3";
  reg = <0x0 0xc9000000 0x0 0x100000>;
  interrupts = <0 30 4>;
  usb-phy = <&usb2_phy>, <&usb3_phy>;
  cpu-type = "gxl";
  clock-src = "usb3.0";
 };

 usb2_phy: usb2phy@d0078000 {
  compatible = "amlogic, amlogic-new-usb2";
  portnum = <3>;
  reg = <0x0 0xd0078000 0x0 0x80>;
 };

 usb3_phy: usb3phy@d0078080 {
  compatible = "amlogic, amlogic-new-usb3";
  portnum = <0>;
  reg = <0x0 0xd0078080 0x0 0x20>;
 };

 dwc2_a {
  compatible = "amlogic, dwc2";
  device_name = "dwc2_a";
  reg = <0x0 0xc9100000 0x0 0x40000>;
  status = "okay";
  interrupts = <0 31 4>;
  pl-periph-id = <0>;
  clock-src = "usb0";
  port-id = <0>;
  port-type = <2>;
  port-speed = <0>;
  port-config = <0>;
  port-dma = <0>;
  port-id-mode = <0>;
  usb-fifo = <728>;
  cpu-type = "gxl";
  controller-type = <1>;
  phy-reg = <0xd0078000>;
  phy-reg-size = <0xa0>;
  clocks = <&clkc ((25 + 25) + 21)
   &clkc (((25 + 25) + 26) + 6)
   &clkc ((25 + 25) + 17)>;
  clock-names = "usb_general",
   "usb1",
   "usb1_to_ddr";
  };

 meson-amvideom {
  compatible = "amlogic, amvideom";
  dev_name = "amvideom";
  status = "okay";
  interrupts = <0 3 1>;
  interrupt-names = "vsync";
 };

 vout {
  compatible = "amlogic, vout";
  dev_name = "vout";
  status = "okay";
  fr_auto_policy = <0>;
 };

 cvbsout {
  compatible = "amlogic, cvbsout";
  dev_name = "cvbsout";
  status = "okay";
 };

 amhdmitx: amhdmitx{
  compatible = "amlogic, amhdmitx";
  dev_name = "amhdmitx";
  status = "okay";
  vend-data = <&vend_data>;
  pinctrl-names="hdmitx_hpd", "hdmitx_ddc";
  pinctrl-0=<&hdmitx_hpd>;
  pinctrl-1=<&hdmitx_ddc>;

  interrupts = <0 57 1>;
  interrupt-names = "hdmitx_hpd";
  vend_data: vend_data{
   vendor_name = "Amlogic";

   vendor_id = <0x000000>;
   product_desc = "MBox Meson Ref";
  };
 };

 aocec: aocec{
  compatible = "amlogic, amlogic-aocec";
  device_name = "aocec";
  status = "okay";
  vendor_id = <0x000000>;
  cec_osd_string = "MBox";
  cec_version = <6>;
  port_num = <1>;
  arc_port_mask = <0x0>;
  interrupts = <0 199 1>;
  interrupt-names = "hdmi_aocec";
  pinctrl-names = "hdmitx_aocec";
  pinctrl-0=<&hdmitx_aocec>;
  reg = <0x0 0xc810023c 0x0 0x4
         0x0 0xc8100000 0x0 0x200>;
 };

 sysled {
  compatible = "amlogic, sysled";
  dev_name = "sysled";
  status = "okay";
  led_gpio = <&gpio 73 0>;
  led_active_low = <1>;
 };

 meson-fb {
  compatible = "amlogic, meson-fb";
  memory-region = <&fb_reserved>;
  dev_name = "meson-fb";
  status = "okay";
  interrupts = <0 3 1
   0 89 1>;
  interrupt-names = "viu-vsync", "rdma";
  mem_size = <0x006AF000 0x01851000 0x00100000>;

  display_mode_default = "1080p60hz";
  scale_mode = <1>;

  display_size_default = <1920 1080 1920 3240 32>;

  logo_addr = "0x7e000000";
 };
 ge2d {
  compatible = "amlogic, ge2d";
  dev_name = "ge2d";
  status = "okay";
  interrupts = <0 150 1>;
  interrupt-names = "ge2d";
  clocks = <&clkc ((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 44)>,
   <&clkc ((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 45)>,
   <&clkc ((25 + 25) + 15)>;
  clock-names = "clk_vapb_0",
   "clk_ge2d",
   "clk_ge2d_gate";
 };



 i2s_dai: I2S {
  #sound-dai-cells = <0>;
  compatible = "amlogic, aml-i2s-dai";
  clocks =
   <&clkc 15>,
   <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 7)>,
   <&clkc ((25 + 25) + 4)>,
   <&clkc ((25 + 25) + 5)>,
   <&clkc ((25 + 25) + 6)>,
   <&clkc ((25 + 25) + 7)>,
   <&clkc ((25 + 25) + 8)>,
   <&clkc ((25 + 25) + 9)>,
   <&clkc ((25 + 25) + 10)>,
   <&clkc ((25 + 25) + 11)>,
   <&clkc ((25 + 25) + 13)>,
   <&clkc ((((25 + 25) + 26) + 18) + 10)>,
   <&clkc ((25 + 25) + 1)>;
  clock-names =
   "mpll2",
   "mclk",
   "top_glue",
   "aud_buf",
   "i2s_out",
   "amclk_measure",
   "aififo2",
   "aud_mixer",
   "mixer_reg",
   "adc",
   "top_level",
   "aoclk",
   "aud_in";
  i2s_pos_sync = <0>;

 };
 dmic:snd_dmic {
  #sound-dai-cells = <0>;
  compatible = "aml, aml_snd_dmic";
  reg = <0x0 0xd0042000 0x0 0x2000>;
  status = "okay";
  resets = <
   &clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 10)
  >;
  reset-names = "pdm";
  pinctrl-names = "aml_dmic_pins";
  pinctrl-0 = <&aml_dmic_pins>;
  clocks = <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 11)>,
   <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 7)>;
  clock-names = "pdm", "mclk";
 };
 spdif_dai: SPDIF {
  #sound-dai-cells = <0>;
  compatible = "amlogic, aml-spdif-dai";
  clocks =
   <&clkc 14>,
   <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 15)>,
   <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 7)>,
   <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 22)>,
   <&clkc 12>,
   <&clkc ((25 + 25) + 5)>,
   <&clkc ((((25 + 25) + 26) + 18) + 11)>;
  clock-names =
   "mpll1",
   "i958",
   "mclk",
   "spdif",
   "clk_81",
   "iec958",
   "iec958_amclk";
 };
 pcm_dai: PCM {
  #sound-dai-cells = <0>;
  compatible = "amlogic, aml-pcm-dai";
  pinctrl-names = "aml_audio_pcm";
  pinctrl-0 = <&audio_pcm_pins>;
  clocks =
   <&clkc 13>,
   <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 19)>,
   <&clkc (((((((((25 + 25) + 26) + 18) + 20) + 5) + 24) + 9) + 46) + 21)>;
  clock-names =
   "mpll0",
   "pcm_mclk",
   "pcm_sclk";
  pcm_mode = <1>;
 };
 i2s_plat: i2s_platform {
  compatible = "amlogic, aml-i2s";
  interrupts = <0 29 1>;
 };
 pcm_plat: pcm_platform {
  compatible = "amlogic, aml-pcm";
 };
 spdif_codec: spdif_codec{
  #sound-dai-cells = <0>;
  compatible = "amlogic, aml-spdif-codec";
  pinctrl-names = "aml_audio_spdif";
  pinctrl-0 = <&audio_spdif_pins>;
 };
 pcm_codec: pcm_codec{
  #sound-dai-cells = <0>;
  compatible = "amlogic, pcm2BT-codec";
 };



 dummy_codec:dummy{
  #sound-dai-cells = <0>;
  compatible = "amlogic, aml_dummy_codec";
  status = "disable";
 };
 amlogic_codec:t9015{
  #sound-dai-cells = <0>;
  compatible = "amlogic, aml_codec_T9015";
  reg = <0x0 0xc8832000 0x0 0x14>;
  status = "okay";
 };
 aml_sound_meson {
  compatible = "aml, meson-snd-card";
  status = "okay";
  aml-sound-card,format = "i2s";
  aml_sound_card,name = "AML-MESONAUDIO";
  aml,audio-routing =
    "Ext Spk","LOUTL",
    "Ext Spk","LOUTR";

  mute_gpio-gpios = <&gpio 21 0>;
  mute_inv;
  hp_disable;
  hp_paraments = <800 300 0 5 1>;
  pinctrl-names = "aml_audio_i2s";
  pinctrl-0 = <&audio_i2s_pins>;
  cpu_list = <&cpudai0 &cpudai1 &cpudai2>;
  codec_list = <&codec0 &codec1 &codec2>;
  plat_list = <&i2s_plat &i2s_plat &pcm_plat>;
  cpudai0: cpudai0 {
   sound-dai = <&i2s_dai>;
  };
  cpudai1: cpudai1 {
   sound-dai = <&spdif_dai>;
  };
  cpudai2: cpudai2 {
   sound-dai = <&pcm_dai>;
  };
  codec0: codec0 {
   sound-dai = <&amlogic_codec>;
  };
  codec1: codec1 {
   sound-dai = <&spdif_codec>;
  };
  codec2: codec2 {
   sound-dai = <&pcm_codec>;
  };
 };

 rdma{
  compatible = "amlogic, meson, rdma";
  dev_name = "amlogic-rdma";
  status = "ok";
  interrupts = <0 89 1>;
  interrupt-names = "rdma";
 };

 amvenc_avc{
  compatible = "amlogic, amvenc_avc";
  dev_name = "amvenc_avc";
  status = "okay";
  interrupts = <0 45 1>;
  interrupt-names = "mailbox_2";
 };

 hevc_enc{
  compatible = "cnm, HevcEnc";
  dev_name = "HevcEnc";
  status = "okay";
  interrupts = <0 187 1>;
  interrupt-names = "wave420l_irq";
  #address-cells=<2>;
  #size-cells=<2>;
  ranges;
  io_reg_base{
   reg = <0x0 0xc8810000 0x0 0x4000>;
  };
 };

 partitions: partitions{
  parts = <11>;
  part-0 = <&logo>;
  part-1 = <&recovery>;
  part-2 = <&rsv>;
  part-3 = <&tee>;
  part-4 = <&crypt>;
  part-5 = <&misc>;
  part-6 = <&instaboot>;
  part-7 = <&boot>;
  part-8 = <&system>;
  part-9 = <&cache>;
  part-10 = <&data>;

  logo:logo{
   pname = "logo";
   size = <0x0 0x2000000>;
   mask = <1>;
  };
  recovery:recovery{
   pname = "recovery";
   size = <0x0 0x2000000>;
   mask = <1>;
  };
  rsv:rsv{
   pname = "rsv";
   size = <0x0 0x800000>;
   mask = <1>;
  };
  tee:tee{
   pname = "tee";
   size = <0x0 0x800000>;
   mask = <1>;
  };
  crypt:crypt{
   pname = "crypt";
   size = <0x0 0x2000000>;
   mask = <1>;
  };
  misc:misc{
   pname = "misc";
   size = <0x0 0x2000000>;
   mask = <1>;
  };
  instaboot:instaboot{
   pname = "instaboot";
   size = <0x0 0x400000>;
   mask = <1>;
  };
  boot:boot
  {
   pname = "boot";
   size = <0x0 0x2000000>;
   mask = <1>;
  };
  system:system
  {
   pname = "system";
   size = <0x0 0x80000000>;
   mask = <1>;
  };
  cache:cache
  {
   pname = "cache";
   size = <0x0 0x20000000>;
   mask = <2>;
  };
  data:data
  {
   pname = "data";
   size = <0xffffffff 0xffffffff>;
   mask = <4>;
  };
 };

 ppmgr {
  compatible = "amlogic, ppmgr";
  memory-region = <&ppmgr_reserved>;
  dev_name = "ppmgr";
  status = "okay";
 };

 deinterlace {
  compatible = "amlogic, deinterlace";
  status = "okay";
  flag_cma = <1>;

  memory-region = <&di_cma_reserved>;
  interrupts = <0 46 1 0 6 1>;
  interrupt-names = "de_irq", "timerc";







  buffer-size = <3133440>;
  hw-version = <2>;
 };

 ionvideo {
  compatible = "amlogic, ionvideo";
  dev_name = "ionvideo";
  status = "okay";
 };

 amlvideo {
  compatible = "amlogic, amlvideo";
  dev_name = "amlvideo";
  status = "okay";
 };

 amlvideo2 {
  compatible = "amlogic, amlvideo2";
  dev_name = "amlvideo2";
  status = "okay";
  cma_mode = <1>;
 };


 vdin0 {
  compatible = "amlogic, vdin";

  dev_name = "vdin0";
  status = "ok";
  reserve-iomap = "true";
  flag_cma = <1>;







  cma_size = <16>;
  interrupts = <0 83 1>;
  rdma-irq = <2>;




  vdin_id = <0>;







  tv_bit_mode = <1>;
 };
 vdin1 {
  compatible = "amlogic, vdin";
  memory-region = <&vdin1_cma_reserved>;
  dev_name = "vdin1";
  status = "ok";
  reserve-iomap = "true";
  flag_cma = <0>;
  interrupts = <0 85 1>;
  rdma-irq = <4>;




  vdin_id = <1>;






  tv_bit_mode = <1>;
 };

 amlvecm {
  compatible = "amlogic, vecm";
  dev_name = "aml_vecm";
  status = "okay";
  gamma_en = <0>;
  wb_en = <0>;
  cm_en = <0>;
 };

 unifykey{
  compatible = "amlogic, unifykey";
  status = "ok";

  unifykey-num = <14>;
  unifykey-index-0 = <&keysn_0>;
  unifykey-index-1 = <&keysn_1>;
  unifykey-index-2 = <&keysn_2>;
  unifykey-index-3 = <&keysn_3>;
  unifykey-index-4 = <&keysn_4>;
  unifykey-index-5 = <&keysn_5>;
  unifykey-index-6 = <&keysn_6>;
  unifykey-index-7 = <&keysn_7>;
  unifykey-index-8 = <&keysn_8>;
  unifykey-index-9 = <&keysn_9>;
  unifykey-index-10= <&keysn_10>;
  unifykey-index-11= <&keysn_11>;
  unifykey-index-12= <&keysn_12>;
  unifykey-index-13= <&keysn_13>;

  keysn_0: key_0{
   key-name = "usid";
   key-device = "normal";
   key-permit = "read","write","del";
  };
  keysn_1:key_1{
   key-name = "mac";
   key-device = "normal";
   key-permit = "read","write","del";
  };
  keysn_2:key_2{
   key-name = "hdcp";
   key-device = "secure";
   key-type = "sha1";
   key-permit = "read","write","del";
  };
  keysn_3:key_3{
   key-name = "secure_boot_set";
   key-device = "efuse";
   key-permit = "write";
  };
  keysn_4:key_4{
   key-name = "mac_bt";
   key-device = "normal";
   key-permit = "read","write","del";
   key-type = "mac";
  };
  keysn_5:key_5{
   key-name = "mac_wifi";
   key-device = "normal";
   key-permit = "read","write","del";
   key-type = "mac";
  };
  keysn_6:key_6{
   key-name = "hdcp2_tx";
   key-device = "normal";
   key-permit = "read","write","del";
  };
  keysn_7:key_7{
   key-name = "hdcp2_rx";
   key-device = "normal";
   key-permit = "read","write","del";
  };
  keysn_8:key_8{
   key-name = "widevinekeybox";
   key-device = "secure";
   key-permit = "read","write","del";
  };
  keysn_9:key_9{
   key-name = "deviceid";
   key-device = "normal";
   key-permit = "read","write","del";
  };
  keysn_10:key_10{
   key-name = "hdcp22_fw_private";
   key-device = "secure";
   key-permit = "read","write","del";
  };
  keysn_11:key_11{
   key-name = "PlayReadykeybox25";
   key-device = "secure";
   key-permit = "read","write","del";
  };
  keysn_12:key_12{
   key-name = "prpubkeybox";
   key-device = "secure";
   key-permit = "read","write","del";
  };
  keysn_13:key_13{
   key-name = "prprivkeybox";
   key-device = "secure";
   key-permit = "read","write","del";
  };
 };
};
&efuse {
 status = "ok";
};
